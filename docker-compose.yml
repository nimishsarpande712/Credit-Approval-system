services:
  web:
    build: ./Backend
    volumes:
      - ./Backend:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
      - celery
    networks:
      - app-network
    environment:
      - POSTGRES_DB=credit_approval_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0

  celery:
    build:
      context: ./Backend
      dockerfile: Dockerfile.celery
    volumes:
      - ./Backend:/app
    depends_on:
      - redis
      - db
    networks:
      - app-network
    environment:
      - POSTGRES_DB=credit_approval_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - app-network
    environment:
      - POSTGRES_DB=credit_approval_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  redis:
    image: redis:6
    networks:
      - app-network
    ports:
      - "6379:6379"

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./Frontend:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - web
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
